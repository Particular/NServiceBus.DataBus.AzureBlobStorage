[assembly: System.Runtime.CompilerServices.InternalsVisibleTo(@"NServiceBus.DataBus.AzureBlobStorage.Tests, PublicKey=00240000048000009400000006020000002400005253413100040000010001007f16e21368ff041183fab592d9e8ed37e7be355e93323147a1d29983d6e591b04282e4da0c9e18bd901e112c0033925eb7d7872c2f1706655891c5c9d57297994f707d16ee9a8f40d978f064ee1ffc73c0db3f4712691b23bf596f75130f4ec978cf78757ec034625a5f27e6bb50c618931ea49f6f628fd74271c32959efb1c5")]
[assembly: System.Runtime.InteropServices.ComVisible(false)]
namespace NServiceBus
{
    public class AzureClaimCheck : NServiceBus.ClaimCheck.ClaimCheckDefinition
    {
        public AzureClaimCheck() { }
        protected override System.Type ProvidedByFeature() { }
    }
    [System.Obsolete("AzureDataBus has been replaced by AzureClaimCheck. Use `AzureClaimCheck` instead." +
        " Will be treated as an error from version 7.0.0. Will be removed in version 8.0." +
        "0.", false)]
    public class AzureDataBus : NServiceBus.DataBus.DataBusDefinition
    {
        public AzureDataBus() { }
        protected override System.Type ProvidedByFeature() { }
    }
    public static class ConfigureAzureClaimCheck
    {
        public static NServiceBus.ClaimCheck.ClaimCheckExtensions<NServiceBus.AzureClaimCheck> BackOffInterval(this NServiceBus.ClaimCheck.ClaimCheckExtensions<NServiceBus.AzureClaimCheck> config, int backOffInterval) { }
        public static NServiceBus.ClaimCheck.ClaimCheckExtensions<NServiceBus.AzureClaimCheck> BasePath(this NServiceBus.ClaimCheck.ClaimCheckExtensions<NServiceBus.AzureClaimCheck> config, string basePath) { }
        public static NServiceBus.ClaimCheck.ClaimCheckExtensions<NServiceBus.AzureClaimCheck> ConnectionString(this NServiceBus.ClaimCheck.ClaimCheckExtensions<NServiceBus.AzureClaimCheck> config, string connectionString) { }
        public static NServiceBus.ClaimCheck.ClaimCheckExtensions<NServiceBus.AzureClaimCheck> Container(this NServiceBus.ClaimCheck.ClaimCheckExtensions<NServiceBus.AzureClaimCheck> config, string containerName) { }
        public static NServiceBus.ClaimCheck.ClaimCheckExtensions<NServiceBus.AzureClaimCheck> MaxRetries(this NServiceBus.ClaimCheck.ClaimCheckExtensions<NServiceBus.AzureClaimCheck> config, int maxRetries) { }
        public static NServiceBus.ClaimCheck.ClaimCheckExtensions<NServiceBus.AzureClaimCheck> NumberOfIOThreads(this NServiceBus.ClaimCheck.ClaimCheckExtensions<NServiceBus.AzureClaimCheck> config, int numberOfIOThreads) { }
        public static NServiceBus.ClaimCheck.ClaimCheckExtensions<NServiceBus.AzureClaimCheck> UseBlobServiceClient(this NServiceBus.ClaimCheck.ClaimCheckExtensions<NServiceBus.AzureClaimCheck> config, Azure.Storage.Blobs.BlobServiceClient blobServiceClient) { }
    }
    [System.Obsolete("AzureDataBus has been replaced by AzureClaimCheck. These extension methods are re" +
        "placed by the ones on the AzureClaimCheck type. Use `AzureClaimCheck` instead. W" +
        "ill be treated as an error from version 7.0.0. Will be removed in version 8.0.0." +
        "", false)]
    public static class ConfigureAzureDataBus
    {
        public static NServiceBus.DataBus.DataBusExtensions<NServiceBus.AzureDataBus> BackOffInterval(this NServiceBus.DataBus.DataBusExtensions<NServiceBus.AzureDataBus> config, int backOffInterval) { }
        public static NServiceBus.DataBus.DataBusExtensions<NServiceBus.AzureDataBus> BasePath(this NServiceBus.DataBus.DataBusExtensions<NServiceBus.AzureDataBus> config, string basePath) { }
        public static NServiceBus.DataBus.DataBusExtensions<NServiceBus.AzureDataBus> ConnectionString(this NServiceBus.DataBus.DataBusExtensions<NServiceBus.AzureDataBus> config, string connectionString) { }
        public static NServiceBus.DataBus.DataBusExtensions<NServiceBus.AzureDataBus> Container(this NServiceBus.DataBus.DataBusExtensions<NServiceBus.AzureDataBus> config, string containerName) { }
        public static NServiceBus.DataBus.DataBusExtensions<NServiceBus.AzureDataBus> MaxRetries(this NServiceBus.DataBus.DataBusExtensions<NServiceBus.AzureDataBus> config, int maxRetries) { }
        public static NServiceBus.DataBus.DataBusExtensions<NServiceBus.AzureDataBus> NumberOfIOThreads(this NServiceBus.DataBus.DataBusExtensions<NServiceBus.AzureDataBus> config, int numberOfIOThreads) { }
        public static NServiceBus.DataBus.DataBusExtensions<NServiceBus.AzureDataBus> UseBlobServiceClient(this NServiceBus.DataBus.DataBusExtensions<NServiceBus.AzureDataBus> config, Azure.Storage.Blobs.BlobServiceClient blobServiceClient) { }
    }
}
namespace NServiceBus.ClaimCheck.AzureBlobStorage
{
    public interface IProvideBlobServiceClient
    {
        Azure.Storage.Blobs.BlobServiceClient Client { get; }
    }
}
namespace NServiceBus.DataBus.AzureBlobStorage
{
    [System.Obsolete(@"NServiceBus.DataBus.AzureBlobStorage.IProvideBlobServiceClient has been replaced by NServiceBus.ClaimCheck.AzureBlobStorage.IProvideBlobServiceClient. Use `NServiceBus.ClaimCheck.AzureBlobStorage.IProvideBlobServiceClient` instead. Will be treated as an error from version 7.0.0. Will be removed in version 8.0.0.", false)]
    public interface IProvideBlobServiceClient : NServiceBus.ClaimCheck.AzureBlobStorage.IProvideBlobServiceClient { }
}